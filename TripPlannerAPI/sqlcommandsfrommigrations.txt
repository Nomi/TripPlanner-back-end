CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256) NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "OrganizerRating" real NOT NULL,
    "UserRating" real NOT NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
);

CREATE TABLE "PreferenceType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PreferenceTypeName" text NULL,
    CONSTRAINT "PK_PreferenceType" PRIMARY KEY ("Id")
);

CREATE TABLE "TripType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TypeName" text NOT NULL,
    CONSTRAINT "PK_TripType" PRIMARY KEY ("Id")
);

CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Ratings" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "IsOrganizer" boolean NOT NULL,
    "RatingPoints" real NOT NULL,
    "UserId" text NULL,
    CONSTRAINT "PK_Ratings" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Ratings_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id")
);

CREATE TABLE "Trips" (
    "tripId" integer GENERATED BY DEFAULT AS IDENTITY,
    date timestamp with time zone NOT NULL,
    "creationDateTime" timestamp with time zone NOT NULL,
    type text NULL,
    "totalTime" real NOT NULL,
    description text NOT NULL,
    distance real NOT NULL,
    "isRecommended" boolean NOT NULL,
    "creatorId" text NULL,
    CONSTRAINT "PK_Trips" PRIMARY KEY ("tripId"),
    CONSTRAINT "FK_Trips_AspNetUsers_creatorId" FOREIGN KEY ("creatorId") REFERENCES "AspNetUsers" ("Id")
);

CREATE TABLE "TripTypesPreferences" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TripTypeId" integer NOT NULL,
    "PreferenceTypeId" integer NOT NULL,
    "UserId" text NULL,
    "Points" integer NOT NULL,
    CONSTRAINT "PK_TripTypesPreferences" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_TripTypesPreferences_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_TripTypesPreferences_PreferenceType_PreferenceTypeId" FOREIGN KEY ("PreferenceTypeId") REFERENCES "PreferenceType" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_TripTypesPreferences_TripType_TripTypeId" FOREIGN KEY ("TripTypeId") REFERENCES "TripType" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Locations" (
    "locationId" integer GENERATED BY DEFAULT AS IDENTITY,
    lat real NOT NULL,
    lng real NOT NULL,
    name text NULL,
    "tripId" integer NULL,
    CONSTRAINT "PK_Locations" PRIMARY KEY ("locationId"),
    CONSTRAINT "FK_Locations_Trips_tripId" FOREIGN KEY ("tripId") REFERENCES "Trips" ("tripId")
);

CREATE TABLE "Pin" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Lat" real NOT NULL,
    "Lng" real NOT NULL,
    "Name" text NULL,
    "tripId" integer NULL,
    CONSTRAINT "PK_Pin" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Pin_Trips_tripId" FOREIGN KEY ("tripId") REFERENCES "Trips" ("tripId")
);

CREATE TABLE "Posts" (
    "postId" integer GENERATED BY DEFAULT AS IDENTITY,
    "CreatorId" text NULL,
    "RelatedTriptripId" integer NOT NULL,
    "Content" text NOT NULL,
    "CreationDateTime" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Posts" PRIMARY KEY ("postId"),
    CONSTRAINT "FK_Posts_AspNetUsers_CreatorId" FOREIGN KEY ("CreatorId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_Posts_Trips_RelatedTriptripId" FOREIGN KEY ("RelatedTriptripId") REFERENCES "Trips" ("tripId") ON DELETE CASCADE
);

CREATE TABLE "Preference" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "preferenceStr" text NOT NULL,
    "tripId" integer NULL,
    CONSTRAINT "PK_Preference" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Preference_Trips_tripId" FOREIGN KEY ("tripId") REFERENCES "Trips" ("tripId")
);

CREATE TABLE "TripUser" (
    "FavoriteTripstripId" integer NOT NULL,
    "FavoritedById" text NOT NULL,
    CONSTRAINT "PK_TripUser" PRIMARY KEY ("FavoriteTripstripId", "FavoritedById"),
    CONSTRAINT "FK_TripUser_AspNetUsers_FavoritedById" FOREIGN KEY ("FavoritedById") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_TripUser_Trips_FavoriteTripstripId" FOREIGN KEY ("FavoriteTripstripId") REFERENCES "Trips" ("tripId") ON DELETE CASCADE
);

CREATE TABLE "TripUser1" (
    "TripsJoinedtripId" integer NOT NULL,
    "membersId" text NOT NULL,
    CONSTRAINT "PK_TripUser1" PRIMARY KEY ("TripsJoinedtripId", "membersId"),
    CONSTRAINT "FK_TripUser1_AspNetUsers_membersId" FOREIGN KEY ("membersId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_TripUser1_Trips_TripsJoinedtripId" FOREIGN KEY ("TripsJoinedtripId") REFERENCES "Trips" ("tripId") ON DELETE CASCADE
);

INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('60409b93-2dc1-4d91-a62f-db9daa9e6a63', '75c1bae0-3282-49f1-9d69-c56a1e00b2f1', 'User', 'USER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('c7d596cb-361b-4147-959f-80b5375bdfff', '410434e7-09f6-4e4a-90c5-0997856cfd33', 'Admin', 'ADMIN');

INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (1, 'Entertainment');
INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (2, 'Sightseeing');
INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (3, 'Exploring');
INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (4, 'Culture');
INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (5, 'History');
INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (6, 'Free ride');
INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (7, 'Training');
INSERT INTO "PreferenceType" ("Id", "PreferenceTypeName")
VALUES (8, 'Nature');

INSERT INTO "TripType" ("Id", "TypeName")
VALUES (1, 'car');
INSERT INTO "TripType" ("Id", "TypeName")
VALUES (2, 'bike');
INSERT INTO "TripType" ("Id", "TypeName")
VALUES (3, 'foot');

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");

CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");

CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");

CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");

CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");

CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");

CREATE INDEX "IX_Locations_tripId" ON "Locations" ("tripId");

CREATE INDEX "IX_Pin_tripId" ON "Pin" ("tripId");

CREATE INDEX "IX_Posts_CreatorId" ON "Posts" ("CreatorId");

CREATE INDEX "IX_Posts_RelatedTriptripId" ON "Posts" ("RelatedTriptripId");

CREATE INDEX "IX_Preference_tripId" ON "Preference" ("tripId");

CREATE INDEX "IX_Ratings_UserId" ON "Ratings" ("UserId");

CREATE INDEX "IX_Trips_creatorId" ON "Trips" ("creatorId");

CREATE INDEX "IX_TripTypesPreferences_PreferenceTypeId" ON "TripTypesPreferences" ("PreferenceTypeId");

CREATE INDEX "IX_TripTypesPreferences_TripTypeId" ON "TripTypesPreferences" ("TripTypeId");

CREATE INDEX "IX_TripTypesPreferences_UserId" ON "TripTypesPreferences" ("UserId");

CREATE INDEX "IX_TripUser_FavoritedById" ON "TripUser" ("FavoritedById");

CREATE INDEX "IX_TripUser1_membersId" ON "TripUser1" ("membersId");

SELECT setval(
    pg_get_serial_sequence('"PreferenceType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "PreferenceType") + 1,
        nextval(pg_get_serial_sequence('"PreferenceType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"TripType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "TripType") + 1,
        nextval(pg_get_serial_sequence('"TripType"', 'Id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240217205802_initial', '7.0.16');

COMMIT;


